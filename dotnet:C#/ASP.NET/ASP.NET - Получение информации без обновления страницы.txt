Короче, обращение к серверу идёт через postback, а это происходит с перезагрузкой страницы. Существует такая вещь, как UpdatePanel, которая типа как бы не вызывает перезагрузки всей страницы, а обновляет только часть, но на самом деле (та-да!) при этом всё равно используется postback (очень подробно рассказано тут: http://encosia.com/are-you-making-these-3-common-aspnet-ajax-mistakes/).

А, чем плохи перезагрузки страницы? Тратится время, ресурсы, а если страница большая и на ней много всего, то много времени и ресурсов. Потому, когда необходимо лишь получить от сервера данные, например цену за стаканчик пломбира, перезагружать ради этого всю огромную страницу будет очень неправильно. Для получения данных нужно использовать AJAX (асинхронный Javascript и XML).

AJAX - это не язык и не файл, который можно потрогать руками. Это идея, как например идея летать. Вы же не можете потрогать "летать". Вы можете летать на метле, во сне, в ИЛ-2 Штурмовик, но увидеть само "летать" нельзя, потому что это идея. Так же и AJAX - его можно по-разному реализовать, но сам он просто концепция.

Ну и вот теперь суть: как получать данные с сервера на ASP.NET странице. Для этого в .cs файле страницы надо создать веб-метод:

// подключить библиотеку (пространство имён)
using System.Web.Services;

// запилить метод (он будет вызываться в скрипте в параметре url)
[WebMethod()]
public static string doSome(int userid)
{
    // вот ровно на этом месте и пишите запросы к БД, вызов процедур. Формируйте
    // результат в любую удобную форму и возвращайте. Например, вот:
    datasets.someDataContext some = new datasets.someDataContext();
    
    string res = string.Empty;

    try
    {
        var lastDudes = (
            from ld in some.metrika
            select new { ld.dateTime, ld.userAD, ld.url }
            );

        foreach (var dude in lastDudes)
        {
            res += "<tr>"
                + "<td style=\"text-align:center;\">" + dude.dateTime.ToString() + "</td>"
                + "<td style=\"text-align:center;\">" + dude.userAD + "</td>"
                + "<td style=\"text-align:center;\">" + dude.url + "</td>"
                + "</tr>";
        }
    }
    catch { }
    return res;
    // дальше передать его в Яваскрипт
}

Очень важный момент. Метод обязательно должен быть static, о чём (и также ещё о паре вещей) рассказано в этой отличной статье: http://encosia.com/why-do-aspnet-ajax-page-methods-have-to-be-static/. Но это ещё не сам важный момент, а сам он вот в чём: очень хочется здесь же сразу и обращаться к контролам на странице и записывать в таблицы на странице полученные из БД данные. Но из этого ничего не выйдет, так как метод выполняется на сервере и просто не знает о существовании контролов, потому что они находятся на клиенте. Это очень распространённый вопрос на многих форумах в интернетах, на который редко отвечают подробно, потому что всех задолбало.

Короче: веб-метод можно использовать только для получения данных с сервера (из БД). Обновление контролов на странице выполняется уже средствами Яваскрипта, в который надо вернуть из веб-метода данные, полученные с сервера. Напомню, что всё это мы затеяли для обновления данных на странице без перезагрузки самой страницы.

Теперь в .aspx файле напилить скрипт:

function asyncServerCall() {
    jQuery.ajax({
        // эта же самая страница и имя веб-метода
        url: 'adminka.aspx/doSome',
        type: "POST",
        data: "",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            // bodyeh_tableLastDudes_body - это ID контрола, куда вписать результат
            $('#bodyeh_tableLastDudes_body').html(data.d);
        }
    });
}

И какую-нибудь кнопку, у которой обработчиком будет эта функция:

<input type="button" value="click me" onclick="asyncServerCall();" />